# Even Fibonacci numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fib(n)
  if n == 1
    return [1]
  elsif n == 2
    return [1, 2]
  else
    last_fib = fib(n-1)
    return last_fib + [last_fib[-2] + last_fib[-1]]
  end
end

n = 1
fib_seq = []
while fib(n).last <= 4000000
  fib_seq = fib(n)
  n += 1
end

puts fib_seq.select{|el| el % 2 == 0}.inject(:+)